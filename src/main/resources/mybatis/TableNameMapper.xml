<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wim.quartz.business.dao.TableNameMapper">
    <resultMap id="BaseResultMap" type="com.wim.quartz.business.entity.TableName">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="biz_id" jdbcType="BIGINT" property="bizId"/>
        <result column="type" jdbcType="VARCHAR" property="type" typeHandler="com.wim.quartz.component.handler.EnumTypeHandler"/>
        <result column="table_name" jdbcType="VARCHAR" property="tableName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <association property="bizType" column="biz_id" select="com.wim.quartz.business.dao.BizTypeMapper.selectByPrimaryKey"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, biz_id,type, table_name, description, `order`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_table_name
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bdc_table_name
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.wim.quartz.business.entity.TableName">
    insert into bdc_table_name (id, biz_id,type, table_name,
      description, `order`)
    values (#{id,jdbcType=BIGINT},#{bizId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{order,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.wim.quartz.business.entity.TableName">
        insert into bdc_table_name
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="bizId != null">
                biz_id,
            </if>
            <if test="tableName != null">
                table_name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="order != null">
                `order`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="bizId != null">
                #{bizId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="order != null">
                #{order,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wim.quartz.business.entity.TableName">
        update bdc_table_name
        <set>
            <if test="bizId != null">
                biz_id = #{bizId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="order != null">
                `order` = #{order,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wim.quartz.business.entity.TableName">
    update bdc_table_name
    set type = #{type,jdbcType=VARCHAR},
      biz_id = #{bizId,jdbcType=BIGINT},
      table_name = #{tableName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectAllForPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_table_name
        order by biz_id,`order` asc
    </select>

</mapper>