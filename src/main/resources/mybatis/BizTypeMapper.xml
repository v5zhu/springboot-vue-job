<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wim.quartz.business.dao.BizTypeMapper">
    <resultMap id="BaseResultMap" type="com.wim.quartz.business.entity.BizType">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="biz_type" jdbcType="VARCHAR" property="bizType"/>
        <result column="biz_type_code" jdbcType="VARCHAR" property="bizTypeCode"/>
        <result column="biz_type_name" jdbcType="VARCHAR" property="bizTypeName"/>
        <result column="file_regex" jdbcType="VARCHAR" property="fileRegex"/>
        <result column="sync_file_pattern" jdbcType="VARCHAR" property="syncFilePattern"/>
        <result column="reject_file_pattern" jdbcType="VARCHAR" property="rejectFilePattern"/>
        <result column="receipt_file_pattern" jdbcType="VARCHAR" property="receiptFilePattern"/>
        <result column="max_records_one_file" jdbcType="INTEGER" property="maxRecordsOneFile"/>
        <result column="sync_type" jdbcType="INTEGER" property="syncType"
                typeHandler="com.wim.quartz.component.handler.EnumTypeHandler"/>
        <result column="source_from" jdbcType="INTEGER" property="sourceFrom"
                typeHandler="com.wim.quartz.component.handler.EnumTypeHandler"/>
        <result column="move_formal_mode" jdbcType="INTEGER" property="moveFormalMode"
                typeHandler="com.wim.quartz.component.handler.EnumTypeHandler"/>
        <result column="move_formal_of_net_unit_code" jdbcType="VARCHAR" property="moveFormalOfNetUnitCode"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
    </resultMap>
    <resultMap id="AllResultMap" extends="BaseResultMap" type="com.wim.quartz.business.entity.BizType">
        <collection property="fieldList" column="id"
                    select="com.wim.quartz.business.dao.TableFieldMapper.findFieldListByBizId"></collection>
        <collection property="syncConfigList" column="id"
                    select="com.wim.quartz.business.dao.SyncConfigMapper.findListByBizId"></collection>
    </resultMap>
    <sql id="Base_Column_List">
    id,biz_type, biz_type_code, biz_type_name, file_regex,sync_file_pattern,reject_file_pattern,receipt_file_pattern,
    max_records_one_file,sync_type,source_from,move_formal_mode,move_formal_of_net_unit_code,`order`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_biz_type
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="AllResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_biz_type
        order by `order` asc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bdc_biz_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.wim.quartz.business.entity.BizType">
    insert into bdc_biz_type (biz_type, biz_type_code, biz_type_name,
      file_regex, sync_file_pattern, reject_file_pattern,
      receipt_file_pattern, max_records_one_file,
      sync_type, source_from, move_formal_mode,
      move_formal_of_net_unit_code,`order`)
    values (#{bizType,jdbcType=VARCHAR}, #{bizTypeCode,jdbcType=VARCHAR}, #{bizTypeName,jdbcType=VARCHAR},
      #{fileRegex,jdbcType=VARCHAR}, #{syncFilePattern,jdbcType=VARCHAR}, #{rejectFilePattern,jdbcType=VARCHAR},
      #{receiptFilePattern,jdbcType=VARCHAR}, #{maxRecordsOneFile,jdbcType=INTEGER},
      #{syncType,jdbcType=INTEGER}, #{sourceFrom,jdbcType=INTEGER}, #{moveFormalMode,jdbcType=INTEGER},
      #{moveFormalOfNetUnitCode,jdbcType=VARCHAR},#{order,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.wim.quartz.business.entity.BizType">
        insert into bdc_biz_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bizType != null">
                biz_type,
            </if>
            <if test="bizTypeCode != null">
                biz_type_code,
            </if>
            <if test="bizTypeName != null">
                biz_type_name,
            </if>
            <if test="fileRegex != null">
                file_regex,
            </if>
            <if test="syncFilePattern != null">
                sync_file_pattern,
            </if>
            <if test="rejectFilePattern != null">
                reject_file_pattern,
            </if>
            <if test="receiptFilePattern != null">
                receipt_file_pattern,
            </if>
            <if test="maxRecordsOneFile != null">
                max_records_one_file,
            </if>
            <if test="syncType != null">
                sync_type,
            </if>
            <if test="sourceFrom != null">
                source_from,
            </if>
            <if test="moveFormalMode != null">
                move_formal_mode,
            </if>
            <if test="moveFormalOfNetUnitCode != null">
                move_formal_of_net_unit_code,
            </if>
            <if test="order != null">
                `order`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bizType != null">
                #{bizType,jdbcType=VARCHAR},
            </if>
            <if test="bizTypeCode != null">
                #{bizTypeCode,jdbcType=VARCHAR},
            </if>
            <if test="bizTypeName != null">
                #{bizTypeName,jdbcType=VARCHAR},
            </if>
            <if test="fileRegex != null">
                #{fileRegex,jdbcType=VARCHAR},
            </if>
            <if test="syncFilePattern != null">
                #{syncFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="rejectFilePattern != null">
                #{rejectFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="receiptFilePattern != null">
                #{receiptFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="maxRecordsOneFile != null">
                #{maxRecordsOneFile,jdbcType=INTEGER},
            </if>
            <if test="syncType != null">
                #{syncType,jdbcType=INTEGER},
            </if>
            <if test="sourceFrom != null">
                #{sourceFrom,jdbcType=INTEGER},
            </if>
            <if test="moveFormalMode != null">
                #{moveFormalMode,jdbcType=INTEGER},
            </if>
            <if test="moveFormalOfNetUnitCode != null">
                #{moveFormalOfNetUnitCode,jdbcType=VARCHAR},
            </if>
            <if test="order != null">
                #{order,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wim.quartz.business.entity.BizType">
        update bdc_biz_type
        <set>
            <if test="bizTypeCode != null">
                biz_type_code = #{bizTypeCode,jdbcType=VARCHAR},
            </if>
            <if test="bizTypeName != null">
                biz_type_name = #{bizTypeName,jdbcType=VARCHAR},
            </if>
            <if test="fileRegex != null">
                file_regex = #{fileRegex,jdbcType=VARCHAR},
            </if>
            <if test="syncFilePattern != null">
                sync_file_pattern = #{syncFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="rejectFilePattern != null">
                reject_file_pattern = #{rejectFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="receiptFilePattern != null">
                receipt_file_pattern = #{receiptFilePattern,jdbcType=VARCHAR},
            </if>
            <if test="maxRecordsOneFile != null">
                max_records_one_file = #{maxRecordsOneFile,jdbcType=INTEGER},
            </if>
            <if test="syncType != null">
                sync_type = #{syncType,jdbcType=INTEGER},
            </if>
            <if test="sourceFrom != null">
                source_from = #{sourceFrom,jdbcType=INTEGER},
            </if>
            <if test="moveFormalMode != null">
                move_formal_mode = #{moveFormalMode,jdbcType=INTEGER},
            </if>
            <if test="moveFormalOfNetUnitCode != null">
                move_formal_of_net_unit_code = #{moveFormalOfNetUnitCode,jdbcType=VARCHAR},
            </if>
            <if test="order != null">
                `order` = #{order,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wim.quartz.business.entity.BizType">
    update bdc_biz_type
    set biz_type_code = #{bizTypeCode,jdbcType=VARCHAR},
      biz_type_name = #{bizTypeName,jdbcType=VARCHAR},
      file_regex = #{fileRegex,jdbcType=VARCHAR},
      sync_file_pattern = #{syncFilePattern,jdbcType=VARCHAR},
      reject_file_pattern = #{rejectFilePattern,jdbcType=VARCHAR},
      receipt_file_pattern = #{receiptFilePattern,jdbcType=VARCHAR},
      max_records_one_file = #{maxRecordsOneFile,jdbcType=INTEGER},
      sync_type = #{syncType,jdbcType=INTEGER},
      source_from = #{sourceFrom,jdbcType=INTEGER},
      move_formal_mode = #{moveFormalMode,jdbcType=INTEGER},
      move_formal_of_net_unit_code = #{moveFormalOfNetUnitCode,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="dropdown" resultType="map">
        select
          id as value,
          biz_type_name as label
        from bdc_biz_type
        order by `order` asc
    </select>

</mapper>