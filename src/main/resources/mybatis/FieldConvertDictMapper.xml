<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wim.quartz.business.dao.FieldConvertDictMapper">
    <resultMap id="BaseResultMap" type="com.wim.quartz.business.entity.FieldConvertDict">
        <id column="field_name" jdbcType="VARCHAR" property="fieldName"/>
        <id column="field_key" jdbcType="VARCHAR" property="fieldKey"/>
        <result column="field_value" jdbcType="VARCHAR" property="fieldValue"/>
        <result column="display" jdbcType="VARCHAR" property="display"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
    </resultMap>
    <sql id="Base_Column_List">
    field_name, field_key, field_value,display,`order`
  </sql>
    <select id="selectByPrimaryKey" parameterType="com.wim.quartz.business.entity.FieldConvertDict"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_field_convert_dict
        where field_name = #{fieldName,jdbcType=VARCHAR}
        and field_key = #{fieldKey,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.wim.quartz.business.entity.FieldConvertDict">
    delete from bdc_field_convert_dict
    where field_name = #{fieldName,jdbcType=VARCHAR}
      and field_key = #{fieldKey,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.wim.quartz.business.entity.FieldConvertDict">
    insert into bdc_field_convert_dict (field_name, field_key,field_value,display,`order`)
    values (#{fieldName,jdbcType=VARCHAR}, #{fieldKey,jdbcType=VARCHAR},#{fieldValue,jdbcType=VARCHAR},#{display,jdbcType=VARCHAR},#{order,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.wim.quartz.business.entity.FieldConvertDict">
        insert into bdc_field_convert_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fieldName != null">
                field_name,
            </if>
            <if test="fieldKey != null">
                field_key,
            </if>
            <if test="fieldValue != null">
                field_value,
            </if>
            <if test="display != null">
                display,
            </if>
            <if test="order != null">
                `order`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fieldName != null">
                #{fieldName,jdbcType=VARCHAR},
            </if>
            <if test="fieldKey != null">
                #{fieldKey,jdbcType=VARCHAR},
            </if>
            <if test="fieldValue != null">
                #{fieldValue,jdbcType=VARCHAR},
            </if>
            <if test="display != null">
                #{display,jdbcType=VARCHAR},
            </if>
            <if test="order != null">
                #{order,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wim.quartz.business.entity.FieldConvertDict">
        update bdc_field_convert_dict
        <set>
            <if test="fieldValue != null">
                field_value = #{fieldValue,jdbcType=VARCHAR},
                display = #{display,jdbcType=VARCHAR},
                `order` = #{order,jdbcType=INTEGER},
            </if>
        </set>
        where field_name = #{fieldName,jdbcType=VARCHAR}
        and field_key = #{fieldKey,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wim.quartz.business.entity.FieldConvertDict">
    update bdc_field_convert_dict
    set field_value = #{fieldValue,jdbcType=VARCHAR},
    display = #{display,jdbcType=VARCHAR},
    `order` = #{order,jdbcType=INTEGER},
    where field_name = #{fieldName,jdbcType=VARCHAR}
      and field_key = #{fieldKey,jdbcType=VARCHAR}
  </update>
    <select id="findByDictField" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bdc_field_convert_dict
        where field_name=#{dictField}
    </select>
</mapper>